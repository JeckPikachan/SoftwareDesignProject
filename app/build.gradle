apply plugin: 'com.android.application'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    def getVersionName = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        def splittedArr = stdout.toString().trim().split('-')
        return splittedArr[0] + '.' + splittedArr[1];
    }

    def getVersionCode = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return stdout.toString().trim().toInteger();
    }

    signingConfigs {
        signing {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.eugene_kachanouski.softwaredesignproject"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signing
        }
    }
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            versionNameSuffix "-dev"
            signingConfig signingConfigs.signing
        }
        full {
            dimension "version"
            signingConfig signingConfigs.signing
        }
    }
}
android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "${variant.applicationId}-${variant.versionName}.apk"
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
